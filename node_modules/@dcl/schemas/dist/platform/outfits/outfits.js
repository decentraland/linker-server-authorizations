"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Outfits = exports.Outfit = void 0;
const wearable_category_1 = require("../item/wearable/wearable-category");
const misc_1 = require("../../misc");
const validation_1 = require("../../validation");
/**
 * Outfit
 * @alpha
 */
var Outfit;
(function (Outfit) {
    Outfit.schema = {
        type: 'object',
        required: ['bodyShape', 'eyes', 'hair', 'skin', 'wearables'],
        properties: {
            bodyShape: {
                type: 'string'
            },
            eyes: {
                type: 'object',
                required: ['color'],
                properties: {
                    color: misc_1.Color3.schema
                }
            },
            hair: {
                type: 'object',
                required: ['color'],
                properties: {
                    color: misc_1.Color3.schema
                }
            },
            skin: {
                type: 'object',
                required: ['color'],
                properties: {
                    color: misc_1.Color3.schema
                }
            },
            wearables: {
                type: 'array',
                items: {
                    type: 'string'
                }
            },
            forceRender: {
                type: 'array',
                nullable: true,
                items: wearable_category_1.WearableCategory.schema
            }
        },
        additionalProperties: true
    };
    Outfit.validate = (0, validation_1.generateLazyValidator)(Outfit.schema);
})(Outfit = exports.Outfit || (exports.Outfit = {}));
/**
 * Outfits
 * @alpha
 */
var Outfits;
(function (Outfits) {
    Outfits.schema = {
        type: 'object',
        required: ['outfits', 'namesForExtraSlots'],
        properties: {
            outfits: {
                type: 'array',
                items: {
                    type: 'object',
                    required: ['slot', 'outfit'],
                    properties: {
                        slot: {
                            type: 'number'
                        },
                        outfit: Outfit.schema
                    }
                }
            },
            namesForExtraSlots: {
                type: 'array',
                uniqueItems: true,
                items: {
                    type: 'string'
                }
            }
        },
        additionalProperties: true
    };
    Outfits.validate = (0, validation_1.generateLazyValidator)(Outfits.schema);
})(Outfits = exports.Outfits || (exports.Outfits = {}));
//# sourceMappingURL=outfits.js.map